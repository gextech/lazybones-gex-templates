buildscript {
  repositories {
    maven { url 'http://repo.spring.io/libs-release' }
    jcenter()
  }

  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.springBootVersion}"
    classpath 'com.bluepapa32:gradle-watch-plugin:0.1.3'
    classpath 'org.springframework:springloaded:1.2.1.RELEASE'
  }
}

apply plugin: 'watch'

def boot_starters = ['jdbc']
{{#if includeHystrix}}
def cloud_starters = ['hystrix']
{{/if}}

dependencies {
  boot_starters.each { name ->
    compile("org.springframework.boot:spring-boot-starter-${name}:${project.springBootVersion}")
  }

  {{#if includeHystrix}}
  cloud_starters.each { name ->
    compile("org.springframework.cloud:spring-cloud-starter-${name}:${project.springCloudVersion}")
  }
  {{/if}}

  compile project(':commons')
  compile project(':domain')

  compile("gex.serling:binding-util:0.1.15"){
    exclude group:"org.grails"
    exclude group:"org.codehaus.groovy"
  }

  compile "com.google.code.gson:gson:${project.gsonVersion}"
  compile "com.squareup.okhttp:okhttp:${project.okhttpVersion}"
  compile("org.springframework.security.oauth:spring-security-oauth2:${project.springOauthVersion}")
  compile 'commons-validator:commons-validator:1.4.1'
  compile 'com.netflix.archaius:archaius-core:0.7.1'

  runtime 'org.postgresql:postgresql:9.3-1102-jdbc41'
  runtime 'org.flywaydb:flyway-core:3.0'

  testCompile "com.squareup.okhttp:mockwebserver:${project.okhttpVersion}"
  testCompile ("org.springframework.boot:spring-boot-starter-web:${project.springBootVersion}")

  testCompile "org.spockframework:spock-spring:${project.spockVersion}"
  testCompile "org.springframework.boot:spring-boot-starter-test:${project.springBootVersion}"
}

watch {

  groovy {
    files files('src/main/groovy')
    tasks 'compileGroovy'
  }
}
